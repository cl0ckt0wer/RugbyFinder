@using AspNetMonsters.Blazor.Geolocation
@using BlazorApp2.Shared
@inject LocationService  LocationService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@page "/editruggerpic"
<h3>Edit Your Picture</h3>
<img id="profilepic" src="@myInfo.MyImageURI" class="img-thumbnail float-right" />
<div class="form-group">

    <label for="selectpic">Select a Profile Picture</label>
    <InputFile class="form-control-file" id="selectpic" OnChange="@OnInputFileChange" />
</div>
@code {
    string format = "image/png";
    string guidstring = string.Empty;
    MyInfo myInfo = new MyInfo();
    protected override async Task OnInitializedAsync()
    {
        guidstring = await localStorage.GetItemAsync<string>("guid");
        myInfo = await Http.GetFromJsonAsync<MyInfo>($"Name/{guidstring}");

    }
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var browserFile = await e.File.RequestImageFileAsync(format, 300, 300);
        using var stream = browserFile.OpenReadStream(maxAllowedSize: 8000000);
        var buffer = new byte[stream.Length];
        await stream.ReadAsync(buffer);
        var args = new RuggerPic() { Pic = buffer, RuggerId = Guid.Parse(guidstring) };
        await Http.PostAsJsonAsync("RuggerPic", args);
        NavigationManager.NavigateTo("/");
    }
}
